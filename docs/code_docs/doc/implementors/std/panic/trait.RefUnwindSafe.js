(function() {var implementors = {};
implementors["pegassas_aggregator"] = [{"text":"impl !RefUnwindSafe for ProbeWorker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VoltageUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CurrentUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChargeUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TemperatureUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PowerUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrequencyUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Voltage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Current","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Charge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Temperature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Power","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Frequency","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatteryData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SolarData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Battery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Solar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Data","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()